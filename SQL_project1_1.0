CREATE DATABASE br_group3;
USE br_group3;

-- 1. Airline 
CREATE TABLE Airline_Info (
    airline_id INT PRIMARY KEY AUTO_INCREMENT,
    airline_name VARCHAR(100) NOT NULL,
    plane_type VARCHAR(50) NOT NULL,
    plane_number VARCHAR(20) UNIQUE NOT NULL,
    passenger_capacity INT NOT NULL
);

-- 2. Flight 
CREATE TABLE Flight_Info (
    flight_id INT PRIMARY KEY AUTO_INCREMENT,
    flight_distance INT NOT NULL,
    starting_airport VARCHAR(50) NOT NULL,
    ending_airport VARCHAR(50) NOT NULL,
    departure_time DATETIME NOT NULL,
    arrival_time DATETIME NOT NULL,
    ticket_price DECIMAL(10,2) NOT NULL,
    passenger_amount INT NOT NULL,
    airline_id INT NOT NULL,
    FOREIGN KEY (airline_id) REFERENCES Airline_Info(airline_id) ON DELETE CASCADE
);

-- 3. Passenger 
CREATE TABLE Passenger_Info (
    booking_id INT PRIMARY KEY AUTO_INCREMENT,
    passport_number VARCHAR(20) NOT NULL UNIQUE,
    passenger_name VARCHAR(100) NOT NULL,
    travel_class ENUM('First', 'Business', 'Economy') NOT NULL,
    flight_id INT NOT NULL,
    FOREIGN KEY (flight_id) REFERENCES Flight_Info(flight_id) ON DELETE CASCADE
);

-- 4. Snack 
CREATE TABLE Snack (
    snack_id INT PRIMARY KEY AUTO_INCREMENT,
    snack_type VARCHAR(50) NOT NULL,
    price DECIMAL(5,2) NOT NULL,
    quantity_sold INT NOT NULL DEFAULT 0,
    flight_id INT NOT NULL,
    FOREIGN KEY (flight_id) REFERENCES Flight_Info(flight_id) ON DELETE CASCADE
);

-- 5. Baggage 
CREATE TABLE Baggage (
    baggage_id INT PRIMARY KEY AUTO_INCREMENT,
    baggage_type ENUM('Carry-On', 'Checked') NOT NULL,
    weight DECIMAL(5,2) NOT NULL,
    baggage_claim ENUM('1', '2', '3', '4', '5') NOT NULL,
    passenger_id INT NOT NULL,
    flight_id INT NOT NULL,
    FOREIGN KEY (passenger_id) REFERENCES Passenger_Info(booking_id) ON DELETE CASCADE,
    FOREIGN KEY (flight_id) REFERENCES Flight_Info(flight_id) ON DELETE CASCADE
);

-- Airline Database
INSERT INTO Airline_Info (airline_name, plane_type, plane_number, passenger_capacity)
VALUES
('Delta Airlines', 'Boeing 737', 'DL737-001', 180),
('Delta Airlines', 'Airbus A320', 'DL320-002', 160),
('American Airlines', 'Boeing 777', 'AA777-003', 300),
('American Airlines', 'Airbus A321', 'AA321-004', 190),
('United Airlines', 'Boeing 787', 'UA787-005', 250),
('United Airlines', 'Airbus A350', 'UA350-006', 280),
('Southwest Airlines', 'Boeing 737', 'SW737-007', 175),
('Southwest Airlines', 'Boeing 737 MAX', 'SWMAX-008', 190),
('Alaska Airlines', 'Embraer 175', 'AK175-009', 76),
('Alaska Airlines', 'Boeing 737', 'AK737-010', 180),
('JetBlue', 'Airbus A320', 'JB320-011', 162),
('JetBlue', 'Embraer 190', 'JB190-012', 100),
('Spirit Airlines', 'Airbus A320', 'SP320-013', 178),
('Spirit Airlines', 'Airbus A321', 'SP321-014', 220),
('Frontier Airlines', 'Airbus A320', 'FR320-015', 180),
('Frontier Airlines', 'Airbus A321', 'FR321-016', 230),
('Hawaiian Airlines', 'Airbus A330', 'HA330-017', 278),
('Hawaiian Airlines', 'Boeing 717', 'HA717-018', 128),
('Allegiant Air', 'Airbus A319', 'AL319-019', 156),
('Allegiant Air', 'Airbus A320', 'AL320-020', 174),
('British Airways', 'Boeing 747', 'BA747-021', 350),
('British Airways', 'Airbus A380', 'BA380-022', 520),
('Qatar Airways', 'Boeing 787', 'QR787-023', 254),
('Qatar Airways', 'Airbus A350', 'QR350-024', 300),
('Emirates', 'Airbus A380', 'EK380-025', 550);

-- Flight Database
INSERT INTO Flight_Info (flight_distance, starting_airport, ending_airport, departure_time, arrival_time, ticket_price, passenger_amount, airline_id)
VALUES
(350, 'ATL', 'MIA', '2025-09-20 06:00:00', '2025-09-20 08:00:00', 199.99, 150, 1),
(500, 'JFK', 'ORD', '2025-09-21 09:30:00', '2025-09-21 11:30:00', 220.50, 160, 2),
(2500, 'DFW', 'LAX', '2025-09-22 14:00:00', '2025-09-22 17:30:00', 399.75, 300, 3),
(1800, 'ORD', 'MIA', '2025-09-23 07:45:00', '2025-09-23 10:15:00', 299.00, 170, 4),
(4500, 'LAX', 'HNL', '2025-09-24 10:00:00', '2025-09-24 15:00:00', 599.50, 250, 5),
(5200, 'JFK', 'LHR', '2025-09-25 20:00:00', '2025-09-26 08:00:00', 799.99, 280, 6),
(350, 'DAL', 'HOU', '2025-09-20 06:00:00', '2025-09-20 07:00:00', 99.99, 175, 7),
(800, 'LAX', 'DEN', '2025-09-21 11:00:00', '2025-09-21 13:30:00', 180.25, 190, 8),
(600, 'SEA', 'SFO', '2025-09-22 08:00:00', '2025-09-22 09:30:00', 155.75, 76, 9),
(3000, 'ANC', 'SEA', '2025-09-23 10:00:00', '2025-09-23 14:30:00', 340.50, 170, 10),
(1000, 'BOS', 'MCO', '2025-09-24 15:30:00', '2025-09-24 18:00:00', 210.00, 160, 11),
(1200, 'BOS', 'JFK', '2025-09-25 08:30:00', '2025-09-25 10:30:00', 189.50, 100, 12),
(900, 'MCO', 'ATL', '2025-09-20 17:00:00', '2025-09-20 18:45:00', 130.99, 178, 13),
(1200, 'ATL', 'DFW', '2025-09-21 12:15:00', '2025-09-21 14:30:00', 145.50, 200, 14),
(850, 'DEN', 'PHX', '2025-09-22 16:00:00', '2025-09-22 18:00:00', 160.00, 150, 15),
(980, 'PHX', 'LAS', '2025-09-23 09:00:00', '2025-09-23 11:00:00', 120.50, 180, 16),
(2700, 'HNL', 'SFO', '2025-09-24 14:00:00', '2025-09-24 18:30:00', 470.00, 270, 17),
(210, 'HNL', 'OGG', '2025-09-25 06:45:00', '2025-09-25 07:30:00', 89.99, 120, 18),
(1300, 'LAS', 'ORD', '2025-09-20 15:00:00', '2025-09-20 17:30:00', 215.00, 156, 19),
(1400, 'ORD', 'ATL', '2025-09-21 19:00:00', '2025-09-21 21:30:00', 225.50, 174, 20),
(6500, 'JFK', 'LHR', '2025-09-22 18:00:00', '2025-09-23 06:00:00', 950.00, 350, 21),
(7000, 'LAX', 'DXB', '2025-09-23 20:00:00', '2025-09-24 11:00:00', 1200.00, 520, 22),
(7500, 'DOH', 'JFK', '2025-09-24 01:30:00', '2025-09-24 10:00:00', 999.99, 254, 23),
(7300, 'DOH', 'LAX', '2025-09-25 02:30:00', '2025-09-25 12:30:00', 1050.75, 300, 24),
(8000, 'DXB', 'LAX', '2025-09-26 22:00:00', '2025-09-27 12:00:00', 1300.00, 550, 25);

-- Passenger Database
INSERT INTO Passenger_Info (passport_number, passenger_name, travel_class, flight_id)
VALUES
('P12345678', 'John Smith', 'Economy', 1),
('P87654321', 'Jane Doe', 'Business', 2),
('P23456789', 'Alice Johnson', 'First', 3),
('P34567890', 'Bob Williams', 'Economy', 4),
('P45678901', 'Charlie Brown', 'Business', 5),
('P56789012', 'Diana Prince', 'Economy', 6),
('P67890123', 'Bruce Wayne', 'First', 7),
('P78901234', 'Clark Kent', 'Economy', 8),
('P89012345', 'Lois Lane', 'Economy', 9),
('P90123456', 'Barry Allen', 'Business', 10),
('P11223344', 'Hal Jordan', 'Economy', 11),
('P22334455', 'Arthur Curry', 'Economy', 12),
('P33445566', 'Victor Stone', 'Economy', 13),
('P44556677', 'Peter Parker', 'Business', 14),
('P55667788', 'Tony Stark', 'First', 15),
('P66778899', 'Steve Rogers', 'Economy', 16),
('P77889900', 'Natasha Romanoff', 'Economy', 17),
('P88990011', 'Clint Barton', 'Business', 18),
('P99001122', 'Wanda Maximoff', 'Economy', 19),
('P10111213', 'Vision', 'First', 20),
('P12131415', 'Sam Wilson', 'Economy', 21),
('P13141516', 'Bucky Barnes', 'Economy', 22),
('P14151617', 'T Challa', 'Business', 23),
('P15161718', 'Shuri', 'Economy', 24),
('P16171819', 'Okoye', 'Economy', 25);

-- Snack Database
INSERT INTO Snack (snack_type, price, quantity_sold, flight_id)
VALUES
('Chips', 3.50, 50, 1),
('Soda', 2.75, 60, 2),
('Candy Bar', 2.00, 40, 3),
('Coffee', 4.00, 30, 4),
('Tea', 3.00, 25, 5),
('Sandwich', 6.50, 35, 6),
('Juice', 3.25, 28, 7),
('Muffin', 2.75, 20, 8),
('Water', 1.50, 80, 9),
('Fruit Cup', 4.50, 18, 10),
('Granola Bar', 2.25, 30, 11),
('Cookies', 3.00, 25, 12),
('Pretzels', 2.00, 40, 13),
('Energy Drink', 4.75, 15, 14),
('Chocolate', 3.50, 27, 15),
('Sandwich', 6.75, 22, 16),
('Protein Bar', 3.25, 25, 17),
('Ice Cream', 4.50, 20, 18),
('Salad', 7.00, 15, 19),
('Bagel', 3.00, 18, 20),
('Soda', 2.50, 55, 21),
('Candy Bar', 2.25, 35, 22),
('Juice', 3.50, 30, 23),
('Chips', 3.00, 40, 24),
('Sandwich', 6.00, 50, 25);

-- Baggage Database
INSERT INTO Baggage (baggage_type, weight, baggage_claim, passenger_id, flight_id)
VALUES
('Checked', 25.50, '1', 1, 1),
('Carry-On', 8.20, '2', 2, 2),
('Checked', 30.00, '3', 3, 3),
('Carry-On', 7.50, '4', 4, 4),
('Checked', 28.00, '5', 5, 5),
('Carry-On', 6.75, '1', 6, 6),
('Checked', 26.50, '2', 7, 7),
('Carry-On', 9.00, '3', 8, 8),
('Carry-On', 7.00, '4', 9, 9),
('Checked', 27.80, '5', 10, 10),
('Carry-On', 6.50, '1', 11, 11),
('Checked', 29.00, '2', 12, 12),
('Carry-On', 8.25, '3', 13, 13),
('Checked', 24.00, '4', 14, 14),
('Checked', 30.00, '5', 15, 15),
('Carry-On', 7.50, '1', 16, 16),
('Checked', 25.75, '2', 17, 17),
('Carry-On', 8.10, '3', 18, 18),
('Checked', 28.90, '4', 19, 19),
('Carry-On', 7.75, '5', 20, 20),
('Checked', 31.00, '1', 21, 21),
('Carry-On', 8.50, '2', 22, 22),
('Checked', 29.50, '3', 23, 23),
('Carry-On', 7.80, '4', 24, 24),
('Checked', 33.00, '5', 25, 25);

-- Query 1: calculate the total number of snack sold and revenue on flights with distance over 900 miles
SELECT SUM(Snack.quantity_sold) AS total_snk_sold,
ROUND(SUM(Snack.price * Snack.quantity_sold), 2) AS total_snk_rev
FROM Flight_Info
JOIN Snack ON Flight_Info.flight_id = Snack.flight_id
WHERE Flight_Info.flight_distance > 900;

-- Query 2: What is the average amount of passengers on planes departing from atlanta
SELECT starting_airport, airline_id, ROUND(AVG(passenger_amount)) AS avg_passengers
FROM Flight_Info
WHERE starting_airport = 'ATL'
GROUP BY airline_id;

-- Query 3: How many first class passengers checked in bags for their flights this month?
SELECT COUNT(passenger_id) AS FC_Checked
FROM Baggage
JOIN Passenger_Info ON Passenger_Info.flight_id = Baggage.flight_id;

-- Query 4: List all airlines and plane types that this airport has that support less than 200 passengers
SELECT airline_name, plane_type
FROM Airline_Info
WHERE passenger_capacity < 200;

-- Query 5: Delta Airlines' lists of flights, airplane type and arrival-destination airports 
SELECT airline_name, plane_type, starting_airport, ending_airport, flight_distance, COUNT(flight_id) AS flight_count
FROM Airline_Info
JOIN Flight_Info ON Airline_Info.airline_id = Airline_Info.airline_id
WHERE airline_name = 'Delta Airlines' AND flight_distance > 4000
GROUP BY airline_name, plane_type, starting_airport, ending_airport, flight_distance
ORDER BY flight_distance DESC;


-- Query 6: Identify the top 5 most profitable flights
SELECT Flight_Info.flight_id, airline_name, starting_airport, ending_airport,
(ticket_price * passenger_amount) + IFNULL(SUM(price * quantity_sold), 0) AS total_revenue
FROM Flight_Info
JOIN Airline_Info ON Flight_Info.airline_id = Airline_Info.airline_id
JOIN Snack ON Flight_Info.flight_id = Snack.flight_id
GROUP BY Flight_Info.flight_id, airline_name, starting_airport, ending_airport, ticket_price, passenger_amount
ORDER BY total_revenue DESC
LIMIT 5;

-- Query 7: List all passengers booked on flight 1
SELECT passenger_name, passport_number, travel_class
FROM Passenger_Info
WHERE flight_id = 1;

-- Query 8: Find flights where baggage weight is above the average baggage weight accross all flights
SELECT Flight_Info.flight_id, starting_airport, ending_airport,
ROUND(SUM(weight), 2) AS total_baggage_weight
FROM Flight_Info
JOIN Baggage ON Flight_Info.flight_id = Baggage.flight_id
GROUP BY Flight_Info.flight_id, starting_airport, ending_airport
HAVING SUM(weight) >
(SELECT AVG(total_weight)
FROM (SELECT SUM(weight) AS total_weight
FROM Baggage
GROUP BY flight_id) AS flight_weights)
ORDER BY total_baggage_weight DESC;

-- Query 9: Show all snacks priced above $4
SELECT snack_type, price, flight_id
FROM Snack
WHERE price > 4.00
ORDER BY price DESC;

-- Query 10: Find passengers who are on flights with above-average ticket prices
SELECT passenger_name, passport_number, travel_class, flight_id
FROM Passenger_Info
WHERE flight_id IN
(SELECT flight_id
FROM Flight_Info
WHERE ticket_price > (SELECT AVG(ticket_price) FROM Flight_Info));






